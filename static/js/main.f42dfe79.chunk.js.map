{"version":3,"sources":["Components/AppItems.js","Nav.js","Components/PostForm.js","App.js","serviceWorker.js","index.js"],"names":["App","props","state","letters","this","List","a","splice","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","item1","item2","item3","responsive","myResponsiveRules","breakpoint","max","min","items","partialVisibilityGutter","tablet","mobile","className","map","word","key","Component","Nav","length","App1","onsumitForm","setState","target","name","value","submitHandler","preventDefault","console","log","axios","post","then","response","data","error","StartsWith","EndsWith","Include","WORDMAXLENGTH","WORDMINLENGTH","onSubmit","type","placeholder","onChange","AppItems","id","PostForm","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f42dfe79.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Carousel from 'react-multi-carousel';\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        const responsive = {\r\n            myResponsiveRules: {\r\n              breakpoint: { max: 3000, min: 1024 },\r\n              items: 3,\r\n              partialVisibilityGutter: 40\r\n            },\r\n            tablet: {\r\n              breakpoint: { max: 1024, min: 464 },\r\n              items: 2,\r\n              partialVisibilityGutter: 30\r\n            },\r\n            mobile: {\r\n              breakpoint: { max: 464, min: 0 },\r\n              items: 1,\r\n              partialVisibilityGutter: 30\r\n            }\r\n          }\r\n        const letters = this.props.List\r\n        const a = letters.splice(0,99);\r\n        const b = letters.splice(100, 199)\r\n        const c = letters.splice(200, 299)\r\n        const d = letters.splice(300, 399)\r\n        const e = letters.splice(400, 499)\r\n        const f = letters.splice(500, 599)\r\n        const g = letters.splice(600,699)\r\n        const h = letters.splice(700, 779)\r\n        const i = letters.splice(800, 899)\r\n        const j = letters.splice(900, 999)\r\n        const k = letters.splice(1000, 1999)\r\n        const l = letters.splice(2000, 2999)\r\n        const m = letters.splice(3000, 3999)\r\n        const n = letters.splice(4000, 4999)\r\n        const o = letters.splice(5000, 5999)\r\n        const p = letters.splice(6000, 6999)\r\n        const q = letters.splice(7000, 7999)\r\n        const r = letters.splice(8000, 8999)\r\n        const s = letters.splice(9000, 9999)\r\n        const t = letters.splice(10100, 10199)\r\n        const u = letters.splice(10200, 10299)\r\n        const v = letters.splice(10300, 10399)\r\n        const w = letters.splice(10400, 10499)\r\n        const x = letters.splice(10500, 10599)\r\n        const y = letters.splice(10600, 10699)\r\n        const z = letters.splice(10700, 10799)\r\n        const item1 = letters.splice(10800, 10899)\r\n        const item2 = letters.splice(10900, 10999)\r\n        const item3 = letters.splice(11000, 11999)\r\n        return ( \r\n            <Carousel responsive={responsive} >\r\n             <div className=\"App-header\">\r\n                    {a.map((word) => {\r\n                        return(\r\n                            <div  key={letters.a}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n             </div>\r\n             <div className=\"App-header\">\r\n                {b.map((word) => {\r\n                        return(\r\n                            <div  key={letters.b}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {c.map((word) => {\r\n                        return(\r\n                            <div  key={letters.c}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {d.map((word) => {\r\n                        return(\r\n                            <div  key={letters.d}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {e.map((word) => {\r\n                        return(\r\n                            <div  key={letters.e}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {f.map((word) => {\r\n                        return(\r\n                            <div  key={letters.f}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            <div className=\"App-header\">\r\n             {g.map((word) => {\r\n                        return(\r\n                            <div  key={letters.g}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {f.map((word) => {\r\n                        return(\r\n                            <div  key={letters.f}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {h.map((word) => {\r\n                        return(\r\n                            <div  key={letters.h}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {i.map((word) => {\r\n                        return(\r\n                            <div  key={letters.i}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {j.map((word) => {\r\n                        return(\r\n                            <div  key={letters.j}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {k.map((word) => {\r\n                        return(\r\n                            <div  key={letters.k}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {l.map((word) => {\r\n                        return(\r\n                            <div  key={letters.l}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {m.map((word) => {\r\n                        return(\r\n                            <div  key={letters.m}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {n.map((word) => {\r\n                        return(\r\n                            <div  key={letters.n}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {o.map((word) => {\r\n                        return(\r\n                            <div  key={letters.o}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {p.map((word) => {\r\n                        return(\r\n                            <div  key={letters.p}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {q.map((word) => {\r\n                        return(\r\n                            <div  key={letters.q}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {r.map((word) => {\r\n                        return(\r\n                            <div  key={letters.r}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {s.map((word) => {\r\n                        return(\r\n                            <div  key={letters.s}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {t.map((word) => {\r\n                        return(\r\n                            <div  key={letters.t}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {u.map((word) => {\r\n                        return(\r\n                            <div  key={letters.u}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {v.map((word) => {\r\n                        return(\r\n                            <div  key={letters.v}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {w.map((word) => {\r\n                        return(\r\n                            <div  key={letters.w}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {x.map((word) => {\r\n                        return(\r\n                            <div  key={letters.x}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {y.map((word) => {\r\n                        return(\r\n                            <div  key={letters.y}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            <div className=\"App-header\">\r\n                {z.map((word) => {\r\n                        return(\r\n                            <div  key={letters.z}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n             <div className=\"App-header\">\r\n                {item1.map((word) => {\r\n                        return(\r\n                            <div  key={letters.item1}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {item2.map((word) => {\r\n                        return(\r\n                            <div  key={letters.item2}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div className=\"App-header\">\r\n                {item3.map((word) => {\r\n                        return(\r\n                            <div  key={letters.item3}>\r\n                               <p>{word}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </Carousel>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App;","import React, { Component } from 'react';\r\nimport \"./Components/Nav.css\"\r\nclass Nav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <nav>\r\n                    <div className=\"Title\">\r\n                        <h4>Word Finder App</h4>\r\n                    </div>\r\n                   <ul>\r\n                     <li className=\"App-list\">{this.props.List.length}</li>\r\n                     <li>Results</li>\r\n                </ul>\r\n                </nav>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Nav;","import React, { Component } from 'react';\r\nimport AppItems from \"./AppItems\"\r\nimport Nav from \"../Nav\"\r\nimport axios from \"axios\"\r\nclass App1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n                StartsWith:\"\",\r\n                EndsWith:\"\",\r\n                Include:\"\",\r\n                WORDMAXLENGTH:10,\r\n                WORDMINLENGTH:2,\r\n                List:[]\r\n         }\r\n    }\r\n    \r\n    onsumitForm = (e) => {\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n    submitHandler = e => {\r\n        e.preventDefault()\r\n        console.log(this.state)\r\n        axios.post('https://wordfind.azurewebsites.net/api/English?code=8IZqWCIZi3kVDCXhQnmyvh0EKHvaQsVWN5kJjLnqR4ss4og5HzTL3Q==', this.state)\r\n        .then(response => {\r\n            console.log(response)\r\n            this.setState({List: response.data})\r\n        })\r\n        .then(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    render() { \r\n     const {StartsWith, EndsWith, Include, WORDMAXLENGTH, WORDMINLENGTH,\r\n    List}= this.state\r\n        return ( \r\n            <div>\r\n                <Nav List={List} />\r\n                        <form onSubmit={this.submitHandler}>\r\n                        <input type=\"text\" name=\"StartsWith\" \r\n                        placeholder=\"startsWith\"\r\n                        onChange={this.onsumitForm} value={StartsWith}/><br/>\r\n                         <input type=\"text\" name=\"Include\"\r\n                        placeholder=\"include\"\r\n                        onChange={this.onsumitForm} value={Include}/><br/>\r\n                        <input type=\"text\" name=\"EndsWith\" \r\n                        placeholder=\"EndsWith\"\r\n                        onChange={this.onsumitForm} value={EndsWith}/><br/>\r\n                        <input type=\"number\" name=\"WORDMAXLENGTH\"  \r\n                        onChange={this.onsumitForm} value={WORDMAXLENGTH}\r\n                        min=\"2\" max=\"17\"/><br/>\r\n                        <input type=\"number\" name=\"WORDMINLENGTH\" \r\n                        onChange={this.onsumitForm} value={WORDMINLENGTH}\r\n                        min=\"1\" max=\"5\"/><br/>\r\n                        <button type=\"submit\">Submit</button>\r\n                </form>\r\n                <AppItems List={List} key={List.id}/>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default App1;","import React from 'react';\nimport PostForm from \"./Components/PostForm\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <PostForm/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}